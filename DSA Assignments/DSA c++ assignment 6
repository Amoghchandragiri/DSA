#include <bits/stdc++.h>
using namespace std;
struct node
{
 int data;
 struct node *next;
};
struct node *front = NULL;
struct node *rear = NULL;
void enqueue(int value)
{
 struct node *ptr;
 ptr = (struct node *)malloc(sizeof(struct node));
 ptr->data = value;
 ptr->next = NULL;
 if ((front == NULL) && (rear == NULL))
 {
 front = rear = ptr;
 }
 else
 {
 rear->next = ptr;
 rear = ptr;
 }
 cout << "Node inserted is:-"<<ptr->data<<endl;
}
int dequeue()
{
 if (front == NULL)
 {
 cout << "Underflow" << endl;
 return -1;
 }
 else
 {
 struct node *temp = front;
 int temp_data = front->data;
 front = front->next;
 free(temp);
 return temp_data;
 }
}
void display()
{
 struct node *temp;
 if ((front == NULL) && (rear == NULL))
 {
 cout << "Queue is Empty" << endl;
 }
 else
 {
 cout << "The queue is " << endl;
 temp = front;
 while (temp)
 {
 cout << temp->data << "-->";
 temp = temp->next;
 }
 cout << "NULL" << endl;
 }
}
int main()
{
 int choice, value;
 cout << "Implementation of Queue using Linked List" << endl;
 while (choice != 4)
 {
 cout << "1.Enqueue"
 << " "
 << "2.Dequeue"
 << " "
 << "3.Display"
 << " "
 << "4.Exit" << endl;
 cout << "Enter your choice" << endl;
 cin >> choice;
 switch (choice)
 {
 case 1:
 cout << "Enter the value to insert: " << endl;
 cin >> value;
 enqueue(value);
 break;
 case 2:
 cout << "Popped element is :" << dequeue() << endl;
 break;
 case 3:
 display();
 break;
 case 4:
 exit(0);
 break;
 default:
 cout << "Wrong Choice" << endl;
 }
 }
 return 0;
}

